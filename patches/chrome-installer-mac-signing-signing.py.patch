diff --git a/chrome/installer/mac/signing/signing.py b/chrome/installer/mac/signing/signing.py
index db8787b0ea8535cde78100166b41199f9367333f..c7c4d5dd1ea7e298fb1701825e4b036034174291 100644
--- a/chrome/installer/mac/signing/signing.py
+++ b/chrome/installer/mac/signing/signing.py
@@ -11,6 +11,7 @@ import os.path
 
 from . import commands
 from .model import CodeSignOptions, CodeSignedProduct, VerifyOptions
+from signing_helper import AddBravePartsForSigning, GenerateBraveWidevineSigFile
 
 _PROVISIONPROFILE_EXT = '.provisionprofile'
 _PROVISIONPROFILE_DEST = 'embedded.provisionprofile'
@@ -136,6 +137,7 @@ def get_parts(config):
             library_basename.replace('.dylib', ''),
             verify_options=verify_options)
 
+    parts = AddBravePartsForSigning(parts, config)
     return parts
 
 
@@ -180,7 +182,7 @@ def sign_part(paths, config, part):
         part: The |model.CodeSignedProduct| to sign. The product's |path| must
             be in |paths.work|.
     """
-    command = ['codesign', '--sign', config.identity]
+    command = ['codesign', '--force', '--sign', config.identity]
     if config.notary_user:
         # Assume if the config has notary authentication information that the
         # products will be notarized, which requires a secure timestamp.
@@ -262,6 +264,7 @@ def sign_chrome(paths, config, sign_framework=False):
                 continue
             sign_part(paths, config, part)
 
+        GenerateBraveWidevineSigFile(paths, config, parts['framework'])
         # Sign the framework bundle.
         sign_part(paths, config, parts['framework'])
 
